{"version":3,"sources":["components/Main.js","components/Edit.js","App.js","index.js"],"names":["Main","paintedMood","this","props","react_default","a","createElement","className","react_router_dom","to","map","item","index","key","Component","Edit","_this$props","handleEdit","pushCreatedMood","action","htmlFor","type","id","data-field","onClick","name","value","onKeyUp","placeholder","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","editDayMood","date","mood","message","createdMood","bind","assertThisInitialized","localStorage","setItem","JSON","stringify","e","field","currentTarget","getAttribute","currentValue","setState","prevState","objectSpread","defineProperty","_this$state","push","saveLocalStorage","_this2","paintCreatedMood","react_router","exact","path","render","components_Main","components_Edit","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7bcbb308.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass Main extends Component {\n  render() {\n    const { paintedMood } = this.props;\n\n    return (\n      <main className=\"app__main\">\n        <div className=\"app__calendar\">\n          <Link to=\"/edit\">\n            <button className=\"add__button\">+</button>\n          </Link>\n          <div className=\"calendar__container\">\n            <ul className=\"mood__list\">\n              {paintedMood.map((item, index) => {\n                if (item === ':)') {\n                  return (<li className=\"mood__list-item item--happy\" key={index}>{item}</li>)\n                } else {\n                  return (<li className=\"mood__list-item item--sad\" key={index}>{item}</li>)\n                }\n              })}\n            </ul>\n          </div>\n        </div>\n      </main>\n    )\n  }\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass Edit extends Component {\n  render() {\n    const { handleEdit, pushCreatedMood } = this.props;\n\n    return (\n      <div className=\"app__form-container\">\n        <form action=\"\" className=\"app__form\">\n          <div className=\"app__form-date\">\n            <label htmlFor=\"date\" className=\"date-title\">Date</label>\n            <input type=\"date\" className=\"date-field\" id=\"date\" data-field=\"date\" onClick={handleEdit} />\n          </div>\n          <div className=\"app__form-state\">\n            <label htmlFor=\"state\" className=\"state-title\">State</label>\n            <div className=\"radio-container\">\n              <label htmlFor=\"\" className=\"state-happy\" >:)\n            <input type=\"radio\" name=\"mood\" value=\":)\" data-field=\"mood\" onClick={handleEdit} />\n              </label>\n              <label htmlFor=\"sad\" className=\"state-sad\"  >:(\n            <input type=\"radio\" id=\"sad\" name=\"mood\" value=\":(\" data-field=\"mood\" onClick={handleEdit} />\n              </label>\n            </div>\n          </div>\n          <div className=\"app__form-message\">\n            <label htmlFor=\"\" className=\"message-title\">Message</label>\n            <input type=\"text\" className=\"message-field\" onKeyUp={handleEdit} data-field=\"message\" placeholder=\"Why is a good day?\" />\n          </div>\n          <div className=\"form__buttons\">\n            <Link to=\"/\">\n              <button type=\"submit\" className=\"button button-save\" onClick={pushCreatedMood}>Save</button>\n            </Link>\n            <Link to=\"/\">\n              <button type=\"button\" className=\"button button-cancel\">Cancel</button>\n            </Link>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Edit;","import React, { Component } from 'react';\nimport Main from './components/Main';\nimport Edit from './components/Edit';\nimport './App.scss';\nimport { Switch, Route } from 'react-router-dom';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editDayMood: {\n        date: '',\n        mood: '',\n        message: ''\n      },\n      createdMood: []\n    }\n    this.handleEdit = this.handleEdit.bind(this);\n    this.pushCreatedMood = this.pushCreatedMood.bind(this);\n  }\n\n  // componentDidMount(){\n  //   this.getSavedLocalStorage();\n  // }\n\n  // getSavedLocalStorage(){\n  //   if (localStorage.getItem('mood') !== null){\n  //     if(editDayMood.mood = ':)'){\n\n  //     }\n  //   }\n  // }\n\n  saveLocalStorage(key, mood) {\n    localStorage.setItem(key, JSON.stringify(mood));\n  }\n\n  handleEdit(e) {\n    const field = e.currentTarget.getAttribute('data-field');\n    const currentValue = e.currentTarget.value;\n\n    this.setState((prevState) => {\n      const { editDayMood } = prevState;\n      const addInfo = { ...editDayMood, [field]: currentValue };\n      return { editDayMood: addInfo };\n    });\n\n  }\n\n  pushCreatedMood() {\n    const { editDayMood, createdMood } = this.state;\n    if (editDayMood.date !== '' && editDayMood.mood !== '' && editDayMood.message !== '') {\n      createdMood.push(editDayMood);\n\n      this.setState({\n        editDayMood: {\n          date: '',\n          mood: '',\n          message: ''\n        },\n        createdMood: createdMood\n      });\n      this.saveLocalStorage('mood', createdMood);\n    }\n  }\n\n  paintCreatedMood() {\n    const paintedMood = this.state.createdMood.map(item => {\n      const mood = item.mood;\n\n      return mood;\n    });\n\n    return paintedMood;\n  }\n\n  render() {\n    const paintedMood = this.paintCreatedMood();\n\n    return (\n      <div className=\"app\">\n        <header className=\"app__header\"></header>\n        <Switch>\n          <Route exact path=\"/\" render={() => (\n            <Main\n              paintedMood={paintedMood}\n            />)}\n          />\n          <Route path=\"/edit\" render={() => (\n            <Edit\n              handleEdit={this.handleEdit}\n              pushCreatedMood={this.pushCreatedMood}\n            />)}\n          />\n        </Switch>\n        <footer className=\"app__footer\"></footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'));\n"],"sourceRoot":""}